# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: gen version
        run: python get_version.py > src/main/resources/version.txt
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build with Maven and JaCoCo
        run: |
          mvn -B verify org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.skip=false -Pcoverage
          # This command ensures tests run and JaCoCo generates its report.
          # `install` also ensures `target/classes` exists for SonarCloud.

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0 # Use the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Your SonarCloud token secret
        with:
          # Your SonarCloud organization and project key
          # These can be found in your SonarCloud project settings.
          # Example: -Dsonar.organization=your-org-key -Dsonar.projectKey=your-project-key
          args: >
            -Dsonar.organization=xh-dev
            -Dsonar.projectKey=xh-dev_j-vault
            -Dsonar.java.binaries=target/classes # Important for Java analysis
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml # Path to your JaCoCo report
            -Dsonar.coverage.exclusions=src/test/**/*.java
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
