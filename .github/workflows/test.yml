# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Testing only

on:
  push:
    branches: [ "test" ]
jobs:
  job1:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          cache: maven
      - run: mvn -Dmaven.test.skip=true clean compile package
      - run: native-image -jar ./target/j-vault.jar
      - run: ls -al
      - run: ./j-vault -h
      - run: ./j-vault token gen
      - run: echo "hi">a.txt
      - run: cat a.txt
      - run: ./j-vault file -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" encrypt -f a.txt
      - run: ls -al
      - run: ./j-vault file -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" decrypt -f a.txt.crypt --stdout
      - run: ./j-vault vault -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" set -k=ss -v=xxxxx
      - run: ./j-vault vault -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" view
      - run: ./j-vault -V
  job2:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          cache: maven
      - run: mvn "-Dmaven.test.skip=true" clean compile package
      - run: native-image -jar target/j-vault.jar
      - run: ls
      - run: ./j-vault.exe -h
      - run: ./j-vault.exe token gen
      - run: echo "hi">a.txt
      - run: cat a.txt
      - run: ./j-vault.exe file -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" encrypt -f a.txt
      - run: ls -al
      - run: ./j-vault.exe file -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" decrypt -f a.txt.crypt --stdout
      - run: ./j-vault.exe vault -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" set -k=ss -v=xxxxx
      - run: ./j-vault.exe vault -c "3k81PijCExKERmAX1VlU2A==:jIw/zw==" view
      - run: ./j-vault.exe -V
  job3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
      - run: echo "hi"
